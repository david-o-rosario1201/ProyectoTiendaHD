@page "/"
@rendermode InteractiveServer
@inject NavigationManager navigation
@inject ModeloNegocioService modeloNegocioService
@inject UsuarioService usuarioService
@inject SegmentoMercadoService segmentoMercadoService
@inject PropuestaValorService propuestaValorService
@inject ClienteService clienteService

<PageTitle>Simulaci&oacute;n</PageTitle>

<h1 class="text-center"><strong>Bienvenido a la simulación<br />de tu Modelo de Negocio</strong></h1>

<div class="card-container">
    <div class="card">
        <strong>Clientes</strong>
        <p>Cantidad: @clientes.Count</p>
        <button class="btn" @onclick="MostrarModal">Agregar</button>
    </div>

    <div class="card">
        <img src="https://img.icons8.com/ios-filled/50/settings.png" alt="Config" class="icon" />
        <button class="btn" @onclick="MostrarModalConfiguracion">Cambiar Configuracion</button>
    </div>
</div>

@if (mostrarModal)
{
    <div class="modal-overlay">
        <div class="modal-content">
            <h3 class="modal-titulo">Creación de Cliente</h3>

            <div class="form-row">
                <div class="form-group">
                    <label><strong>Nombre</strong></label>
                    <input class="form-input" placeholder="Miguel Jimenez" />
                </div>
                <div class="form-group">
                    <label><strong>Edad</strong></label>
                    <input type="number" class="form-input" placeholder="45" />
                </div>
            </div>

            <hr class="divider" />


            <div class="form-group">
                <label>¿Cuáles son sus gustos?</label>
                <div class="form-row">
                    <input class="form-input flex-fill" @bind="nuevoGusto" placeholder="Gustos" />
                    <button class="btn-agregar" @onclick="AgregarGusto">Agregar</button>
                </div>
            </div>

            @if (cliente.DetallesGusto.Any())
            {
                <div class="tabla-gustos">
                    <table>
                        <thead>
                            <tr>
                                <th>Gustos</th>
                                <th>Opciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var gusto in cliente.DetallesGusto)
                            {
                                <tr>
                                    <td>@gusto.Descripcion</td>
                                    <td>
                                        <button class="btn-eliminar" @onclick="() => EliminarGusto(gusto)">🗑️</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }

            <div class="form-actions justify-content-center">
                <button class="btn-guardar">Guardar</button>
            </div>
        </div>
    </div>
}



@code {
    public List<Cliente> clientes = new List<Cliente>();
    public Cliente cliente { get; set; } = new Cliente();
    public string gusto { get; set; } = "";
    bool mostrarModal = false;
    bool mostrarModalConfiguracion = false;
    private string nuevoGusto = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        clientes = await clienteService.Listar(e => true);
    }

    void MostrarModal()
    {
        mostrarModal = true;
        cliente = new Cliente();
        cliente.DetallesGusto = new List<Gusto>();
        gusto = "";
        StateHasChanged();
    }

    void MostrarModalConfiguracion()
    {
        mostrarModalConfiguracion = true;
        cliente = new Cliente();
        cliente.DetallesGusto = new List<Gusto>();
        gusto = "";
        StateHasChanged();
    }

    public void CerrarModal()
    {
        mostrarModal = false;
    }

    void AgregarGusto()
    {
        if (!string.IsNullOrWhiteSpace(gusto))
        {
            cliente.DetallesGusto ??= new List<Gusto>();
            cliente.DetallesGusto.Add(new Gusto { Descripcion = gusto });
            gusto = "";
        }
    }

    void EliminarGusto(Gusto gustoEliminar)
    {
        cliente.DetallesGusto?.Remove(gustoEliminar);
    }

    async void Guardar()
    {
        await clienteService.Crear(cliente);
        clientes.Add(cliente);
        mostrarModal = false;
    }
}
